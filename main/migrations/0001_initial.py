# Generated by Django 3.1.7 on 2021-02-25 15:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_assistant', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HospitalName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'hospitals',
            },
        ),
        migrations.CreateModel(
            name='MedicineCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'medicine_company',
            },
        ),
        migrations.CreateModel(
            name='Assistant',
            fields=[
                ('assistant_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='assistant', serialize=False, to='main.user')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'assistant_info',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('employee_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor', serialize=False, to='main.user')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('age', models.CharField(blank=True, max_length=3, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'doctor_info',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='driver', serialize=False, to='main.user')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'driver_info',
            },
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('moderator_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='moderator', serialize=False, to='main.user')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'moderator_info',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to='main.user')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('age', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'student_info',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(blank=True, max_length=120, null=True)),
                ('company_name', models.ManyToManyField(related_name='company', to='main.MedicineCompany')),
            ],
            options={
                'db_table': 'medicine_info',
            },
        ),
        migrations.CreateModel(
            name='DriverPayment',
            fields=[
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.driver')),
                ('bill', models.CharField(blank=True, max_length=120, null=True)),
                ('paid', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='ConditionInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('patient_condition', models.CharField(blank=True, max_length=300, null=True)),
                ('emergency_condition', models.BooleanField(default=False)),
                ('solve', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student')),
            ],
            options={
                'db_table': 'condition_info',
            },
        ),
        migrations.CreateModel(
            name='HospitalRoute',
            fields=[
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.driver')),
                ('driver_spotted', models.BooleanField(default=False)),
                ('hospital_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.hospitalname')),
            ],
            options={
                'db_table': 'hospital_route',
            },
        ),
        migrations.CreateModel(
            name='BillingInfo',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.student')),
                ('bill', models.CharField(blank=True, max_length=120, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.driver')),
            ],
            options={
                'db_table': 'billing_info',
            },
        ),
        migrations.CreateModel(
            name='AssignedDoctor',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.student')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='main.doctor')),
            ],
            options={
                'db_table': 'assigned_doctor',
            },
        ),
        migrations.CreateModel(
            name='AssignAssistant',
            fields=[
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.doctor')),
                ('assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assistant', to='main.assistant')),
            ],
            options={
                'db_table': 'assigned_assistant',
            },
        ),
    ]
